package com.userapp.controllers;

import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.jsonPath;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;

import org.junit.jupiter.api.Test;
import org.mockito.Mockito;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTest;
import org.springframework.test.context.bean.override.mockito.MockitoBean;
import org.springframework.test.web.servlet.MockMvc;

import com.userapp.entities.User;
import com.userapp.services.UserService;

@WebMvcTest
class UserControllerTest {

	@Autowired // fake http request
	private MockMvc mockmvc;

	@MockitoBean // fake object for UserService
	private UserService userService;

	@Test
    void addUserTest() throws Exception
    {
   	      User user=new User(1L,"RamaKrishna","RamaKrishna@gmail.com");
   	
      	 Mockito.when(userService.save(Mockito.any())).thenReturn(user);
   	
   	
   	    mockmvc.perform(
   			   post("/addNewUser")
   			   .contentType("application/json")
   			   .content("""
                     {
                         "name":"KARTHIKRAM",
                          "email":"gk@gmail.com"
                     }
                     
   			   		"""))
   	    .andExpect(status().isOk())
   	    .andExpect(jsonPath("$.name").value("RamaKrishna"));

    }
}
